import kafka.javaapi.producer.ProducerData;
import kafka.producer.ProducerConfig;
import java.util.Properties;

public class KafkaProducer extends Thread
{
  private final kafka.javaapi.producer.Producer<Integer, String> producer;
  private final String topic;
  private final Properties props = new Properties();

  public Producer(String topic)
  {
    props.put("serializer.class", "kafka.serializer.StringEncoder");
    props.put("zk.connect", "localhost:2181");
    // Use random partitioner. Don't need the key type. Just set it to Integer.
    // The message is of type String.
    producer = new kafka.javaapi.producer.Producer<Integer, String>(new ProducerConfig(props));
    this.topic = topic;
  }
  
  public void run() {
    int messageNo = 1;
    long starttimestamp = System.currentTimeMillis();
    long endtimestamp = System.currentTimeMillis();
    while(true)
    {
	starttimestamp = System.currentTimeMillis();
	
	for (int i = 0; i < 1000; i++) {
	    String messageStr = new String("Message_" + messageNo);
	    producer.send(new ProducerData<Integer, String>(topic, messageStr));
	    messageNo++;
	}
	endtimestamp = System.currentTimeMillis();
	System.out.print("It took " );
	System.out.print( endtimestamp - starttimestamp );
	System.out.println(" ms to execute the test");
	System.out.print("end message number ");
	System.out.println(messageNo);
	
	
	
	
	
    }
  }

}
